$date
	Sun Mar 17 15:26:09 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1us
$end
$scope module tb $end
$var wire 4 ! rslt [3:0] $end
$var wire 1 " ovf $end
$var wire 4 # cout [3:0] $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 1 & m $end
$scope module inst1 $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 & m $end
$var wire 1 ) net0 $end
$var wire 1 * net1 $end
$var wire 1 + net2 $end
$var wire 1 , net3 $end
$var wire 1 " ovf $end
$var wire 4 - rslt [3:0] $end
$var wire 4 . cout [3:0] $end
$scope module FA0 $end
$var wire 1 / a $end
$var wire 1 ) b $end
$var wire 1 & cin $end
$var reg 1 0 cout $end
$var reg 1 1 sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 2 a $end
$var wire 1 * b $end
$var wire 1 3 cin $end
$var reg 1 4 cout $end
$var reg 1 5 sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 6 a $end
$var wire 1 + b $end
$var wire 1 7 cin $end
$var reg 1 8 cout $end
$var reg 1 9 sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 : a $end
$var wire 1 , b $end
$var wire 1 ; cin $end
$var reg 1 < cout $end
$var reg 1 = sum $end
$upscope $end
$upscope $end
$scope begin GTKWAVE $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0=
0<
0;
0:
09
08
07
06
05
04
03
02
11
00
0/
b0 .
b1 -
0,
0+
0*
1)
b1 (
b0 '
0&
b1 %
b0 $
b0 #
0"
b1 !
$end
#10
19
1+
b111 !
b111 -
15
12
b101 %
b101 (
b10 $
b10 '
#20
0=
0"
0;
0+
b0 #
b0 .
08
b111 !
b111 -
19
16
b1 %
b1 (
b110 $
b110 '
#30
13
b1 #
b1 .
10
01
b110 !
b110 -
15
1/
02
b101 $
b101 '
#40
1<
0"
1;
18
09
17
0=
b1111 #
b1111 .
14
0)
1*
1,
b10 !
b10 -
01
12
1&
b101 %
b101 (
b111 $
b111 '
#50
11
1)
b1 !
b1 -
05
02
b100 %
b100 (
b101 $
b101 '
#60
07
04
03
b1100 #
b1100 .
00
09
0)
0*
1+
11
b11 !
b11 -
15
0/
12
b11 %
b11 (
b110 $
b110 '
#70
19
17
14
05
13
b1111 #
b1111 .
10
b100 !
b100 -
01
1)
b10 %
b10 (
#80
1"
b111 #
b111 .
0<
b1100 !
b1100 -
1=
0,
1/
0&
b101 %
b101 (
b111 $
b111 '
#90
0;
1"
08
03
07
1*
0+
1,
00
11
04
15
09
b1000 #
b1000 .
1<
b11 !
b11 -
0=
0/
02
06
1:
b1011 %
b1011 (
b1000 $
b1000 '
#100
1=
1;
18
1"
17
13
14
15
09
0<
0,
b111 #
b111 .
10
b1010 !
b1010 -
01
12
16
0:
1&
b1100 %
b1100 (
b110 $
b110 '
#110
1"
07
04
0;
0*
1+
1,
15
08
19
b1001 #
b1001 .
1<
b110 !
b110 -
0=
02
06
1:
b10 %
b10 (
b1000 $
b1000 '
#120
